pipeline {
    agent any

    stages {

        stage('Build') {
            steps {
                echo 'Building the code...'
                // Use Maven or any other build tool
                sh 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Use JUnit or any other testing framework
                sh 'mvn test'
            }
            post {
                success {
                    emailext(
                        subject: "Pipeline Success: Unit and Integration Tests Passed - ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: "The unit and integration tests have passed. Please check the attached logs for details.",
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        subject: "Pipeline Failure: Unit and Integration Tests Failed - ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: "The unit and integration tests have failed. Please check the attached logs for details.",
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        attachLog: true
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing the code...'
                // Use SonarQube or any other static analysis tool
                sh 'mvn sonar:sonar'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Running security scan...'
                // Use OWASP Dependency Check, Snyk, or any other security tool
                sh 'dependency-check.sh'
            }
            post {
                success {
                    emailext(
                        subject: "Pipeline Success: Security Scan Passed - ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: "The security scan has passed. Please check the attached logs for details.",
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        subject: "Pipeline Failure: Security Scan Failed - ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: "The security scan has failed. Please check the attached logs for details.",
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Use Ansible, AWS CLI, or other deployment tools
                sh 'ansible-playbook deploy_staging.yml'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Run integration tests in staging environment
                sh 'run_tests.sh'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Use Ansible, AWS CLI, or other deployment tools
                sh 'ansible-playbook deploy_production.yml'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace'
            deleteDir() // clean up our workspace
        }
    }
}
